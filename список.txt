функции:

PushBack:
создается ячейка с переданным значением и ссылкой на следующую ячейку на nullptr
для ячейки которая была последней ссылка на следующую ячейку = ссылка на созданную
указатель на конец на неё же
увеличение счетчика ячеек на 1

PushFront:
создается ячейка с переданным значением и ссылкой на следующую ячейку на первую ячейку листа
указатель на начало списка = на созданную ячейку
увеличение счетчика ячеек на 1

Insert:
ссылку через getNext двигаем на переданное число(номер ячейки куда вставить значение)
создается ячейка с переданным значением и ссылкой на следующую ячейку на следующую ячейку от найденной выше ссылки
указатель у ячейки по найденной ссылке на след элемент ставим на созданную ячейку

Delete:
находим ячейку которая стоит перед той, которую нужно удалить (так же сдвигом) (на 1 в примере)
пример: 1 2 3
у 1 ссылку на след делаем равной ссылке на 3
через ссылку на 2 вызываем диструктор для ячейки

Swap: 
берем две ссылки на нужные нам ячейки
через геттеры забираем значения из ячеек
через сеттеры задаем новые значения у ячеек (для первой ячейки значение второй и наоборот)

CreateDB:
проверяем, что переданная строка - адресс файла с расширением csv
открытие файла
в цикле (через ссылку и getNext) проходимся по листу и вводим данные в файловый поток
в качестве разделителя используем ";\n" где ; - разделитель в csv \n переход на новую строку бд

перегрузка оператора вывода в поток консоли(по правилам перегрузки этого оператора слева ссылка на поток, справа в параметрах ссылка на обьект который стоит справа от оператора( ну тип cout<<list, где лист - обьект класса)):
в цикле прходимся по листу, с каждой ячейки закидываем в поток значение ячеки и разделитель (пробел)
возвращаем поток

абсолютно аналогично с файловым потоком вывода, только в самом начале в файл еще закидываем размер листа, чтобы когда считывали из файла лист было проще сделать цикл for
ну и разделитель вместо пробела перенос строки, но это ни на что не влияет

ввод из файла(принцип расположения параметров функции такой же как ранее):
очищаем переданный лист на случай если в нем что-то было до ввода
считываем интовую переменную размера размера будущего листа (пусть будет n)
n раз считываем из файла переменную типа typename (тк шаблон же все таки)
через pushBack добавляем эту переменную в лист
возвращаем поток (просто чтобы закрыть функцию, такие правила)
